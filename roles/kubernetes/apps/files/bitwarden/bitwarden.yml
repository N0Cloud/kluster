---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bitwarden-data
  namespace: bitwarden
  labels:
    app.kubernetes.io/name: bitwarden
  annotations:
    volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bitwarden
  namespace: bitwarden
  labels:
    app.kubernetes.io/name: bitwarden
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bitwarden
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bitwarden
    spec:
      securityContext:
        fsGroup: 1001
      containers:
      - name: bitwardenrs
        image: bitwardenrs/server:1.19.0
        imagePullPolicy: IfNotPresent
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: bitwarden-database-secret
              key: url
        - name: ROCKET_PORT
          value: "8080"
        - name: DATA_FOLDER
          value: /data
        - name: SHOW_PASSWORD_HINT
          value: "false"
        - name: SIGNUPS_ALLOWED
          value: "false"
        - name: INVITATIONS_ALLOWED
          value: "false"
        # - name: ADMIN_TOKEN
        #   value: "TODO"
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
        volumeMounts:
        - mountPath: /data
          name: data-storage
      volumes:
      - name: data-storage
        persistentVolumeClaim:
         claimName: bitwarden-data
---
apiVersion: v1
kind: Service
metadata:
  name: bitwarden
  namespace: bitwarden
  labels:
    app.kubernetes.io/name: bitwarden
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: bitwarden
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bitwarden-ingress
  namespace: bitwarden
  labels:
    app.kubernetes.io/name: bitwarden
  annotations:
     cert-manager.io/cluster-issuer: selfsigned-issuer
     traefik.ingress.kubernetes.io/redirect-entry-point: https
     ingress.kubernetes.io/custom-request-headers: l5d-dst-override:bitwarden.bitwarden.svc.cluster.local:8080
spec:
  tls:
  - hosts:
    - bitwarden.home
    - "*.bitwarden.home"
    secretName: bitwarden-ingress-tls
  rules:
    - host: bitwarden.home
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bitwarden
                port:
                  name: http