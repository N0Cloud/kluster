restartPolicy: Always
image:
  repository: prom/snmp-exporter
  tag: v0.19.0
  pullPolicy: IfNotPresent

config: |
{{ snmp_config | to_nice_yaml | indent(2, True) }}

#resources:
  # limits:
  #   memory: 300Mi
  # requests:
  #   memory: 50Mi

service:
  annotations: {}
  type: ClusterIP
  port: 9116


replicas: 1
## Monitors ConfigMap changes and POSTs to a URL
## Ref: https://github.com/jimmidyson/configmap-reload
##
configmapReload:
  ## configmap-reload container name
  ##
  name: configmap-reload

  ## configmap-reload container image
  ##
  image:
    repository: jimmidyson/configmap-reload
    tag: v0.4.0
    pullPolicy: IfNotPresent

  ## configmap-reload resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}

# Enable this if you're using https://github.com/coreos/prometheus-operator
serviceMonitor:
  enabled: true
  namespace: router-monitor

  # fallback to the prometheus default unless specified
  interval: 10s

  ## Defaults to what's used if you follow CoreOS [Prometheus Install Instructions](https://github.com/helm/charts/tree/master/stable/prometheus-operator#tldr)
  ## [Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#prometheus-operator-1)
  ## [Kube Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#exporters)
  selector:
    prometheus: router-monitor
  # Retain the job and instance labels of the metrics pushed to the snmp-exporter
  # [Scraping SNMP-exporter](https://github.com/prometheus/snmp_exporter#configure-the-snmp_exporter-as-a-target-to-scrape)
  honorLabels: true

  params:
    enabled: true
    conf:
      module:
      - ddwrt
      target:
      - 192.168.2.1

  path: /snmp
  scrapeTimeout: 10s
