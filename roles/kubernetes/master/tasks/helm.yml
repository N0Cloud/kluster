---
- name: Create temp dir
  tempfile:
    state: directory
    suffix: .helm
  register: helm_tempdir

- name: Download helm x64
  unarchive:
    src: https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz
    dest: "{{ helm_tempdir.path }}"
    remote_src: yes
    extra_opts:
      - --strip-components=1
  when: ansible_facts.architecture == "x86_64"

- name: Download helm arm64
  unarchive:
    src: https://get.helm.sh/helm-{{ helm_version }}-linux-arm64.tar.gz
    dest: "{{ helm_tempdir.path }}"
    remote_src: yes
    extra_opts:
      - --strip-components=1
  when:
    - ( ansible_facts.architecture is search("arm") and
        ansible_facts.userspace_bits == "64" ) or
      ansible_facts.architecture is search("aarch64")

- name: Download helm arm
  unarchive:
    src: https://get.helm.sh/helm-{{ helm_version }}-linux-arm.tar.gz
    dest: "{{ helm_tempdir.path }}"
    remote_src: yes
    extra_opts:
      - --strip-components=1
  when:
    - ansible_facts.architecture is search("arm")
    - ansible_facts.userspace_bits == "32"

- name: Install helm binary
  copy:
    src: "{{ helm_tempdir.path }}/helm"
    dest: /usr/local/bin/helm
    owner: root
    group: root
    mode: 0755
    remote_src: yes
 
- name: Clean temp dir
  file:
    path: "{{ helm_tempdir.path }}"
    state: absent

- name: Update helm repo
  command: helm repo update
  failed_when: false